{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmexin/React Project website/To do list/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchWeatherData as fetchWeatherDataApi, fetchWeatherForecast as fetchWeatherForecastApi } from \"../utils/WeatherApi\"; // Import the API functions\nimport \"../Weather.css\"; // Optional styling for weather\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null); // To store forecast data\n  const [location, setLocation] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isFahrenheit, setIsFahrenheit] = useState(false); // State to toggle between F and C\n\n  // Fetch weather data and forecast when the location is changed\n  useEffect(() => {\n    if (location) {\n      getWeatherData(location);\n      getWeatherForecast(location);\n    }\n  }, [location]);\n\n  // Function to fetch weather data\n  const getWeatherData = async location => {\n    try {\n      const data = await fetchWeatherDataApi(location);\n      setWeatherData(data);\n      setError(null); // Reset error state\n    } catch (err) {\n      setError(\"Error fetching weather data.\");\n      setWeatherData(null);\n    }\n  };\n\n  // Function to fetch weather forecast\n  const getWeatherForecast = async location => {\n    try {\n      const forecast = await fetchWeatherForecastApi(location);\n      setForecastData(forecast);\n    } catch (err) {\n      setError(\"Error fetching forecast data.\");\n      setForecastData(null);\n    }\n  };\n\n  // Function to convert Celsius to Fahrenheit\n  const convertToFahrenheit = celsius => {\n    return celsius * 9 / 5 + 32;\n  };\n\n  // Function to convert Fahrenheit to Celsius\n  const convertToCelsius = fahrenheit => {\n    return (fahrenheit - 32) * 5 / 9;\n  };\n\n  // Handle search form submission\n  const handleSearch = e => {\n    e.preventDefault();\n    if (location) {\n      getWeatherData(location);\n      getWeatherForecast(location);\n    }\n  };\n\n  // Toggle between Fahrenheit and Celsius\n  const toggleTemperatureUnit = () => {\n    setIsFahrenheit(!isFahrenheit);\n  };\n\n  // Convert the temperature based on the selected unit (Fahrenheit or Celsius)\n  const getTemperature = tempCelsius => {\n    return isFahrenheit ? convertToFahrenheit(tempCelsius).toFixed(1) : tempCelsius.toFixed(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"weather-title\",\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"weather-search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a city\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        className: \"weather-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"weather-search-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [weatherData.name, \", \", weatherData.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", getTemperature(weatherData.main.temp), \"\\xB0\", isFahrenheit ? \"F\" : \"C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Conditions: \", weatherData.weather[0].description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind Speed: \", weatherData.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), forecastData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-forecast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"5-Day Forecast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), forecastData.list.slice(0, 5).map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [new Date(forecast.dt * 1000).toLocaleDateString(), \" -\", getTemperature(forecast.main.temp), \"\\xB0\", isFahrenheit ? \"F\" : \"C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTemperatureUnit,\n      className: \"unit-toggle-btn\",\n      children: isFahrenheit ? \"Switch to Celsius\" : \"Switch to Fahrenheit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Weather, \"WejUv/ANgvB1FVf2uMugtBEi83A=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","fetchWeatherData","fetchWeatherDataApi","fetchWeatherForecast","fetchWeatherForecastApi","jsxDEV","_jsxDEV","Weather","_s","weatherData","setWeatherData","forecastData","setForecastData","location","setLocation","error","setError","isFahrenheit","setIsFahrenheit","getWeatherData","getWeatherForecast","data","err","forecast","convertToFahrenheit","celsius","convertToCelsius","fahrenheit","handleSearch","e","preventDefault","toggleTemperatureUnit","getTemperature","tempCelsius","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","name","sys","country","main","temp","weather","description","humidity","wind","speed","list","slice","map","index","Date","dt","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["/Users/ryanmexin/React Project website/To do list/src/components/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchWeatherData as fetchWeatherDataApi, fetchWeatherForecast as fetchWeatherForecastApi } from \"../utils/WeatherApi\"; // Import the API functions\nimport \"../Weather.css\"; // Optional styling for weather\n\nfunction Weather() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null); // To store forecast data\n  const [location, setLocation] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isFahrenheit, setIsFahrenheit] = useState(false); // State to toggle between F and C\n\n  // Fetch weather data and forecast when the location is changed\n  useEffect(() => {\n    if (location) {\n      getWeatherData(location);\n      getWeatherForecast(location);\n    }\n  }, [location]);\n\n  // Function to fetch weather data\n  const getWeatherData = async (location) => {\n    try {\n      const data = await fetchWeatherDataApi(location);\n      setWeatherData(data);\n      setError(null); // Reset error state\n    } catch (err) {\n      setError(\"Error fetching weather data.\");\n      setWeatherData(null);\n    }\n  };\n\n  // Function to fetch weather forecast\n  const getWeatherForecast = async (location) => {\n    try {\n      const forecast = await fetchWeatherForecastApi(location);\n      setForecastData(forecast);\n    } catch (err) {\n      setError(\"Error fetching forecast data.\");\n      setForecastData(null);\n    }\n  };\n\n  // Function to convert Celsius to Fahrenheit\n  const convertToFahrenheit = (celsius) => {\n    return (celsius * 9) / 5 + 32;\n  };\n\n  // Function to convert Fahrenheit to Celsius\n  const convertToCelsius = (fahrenheit) => {\n    return (fahrenheit - 32) * 5 / 9;\n  };\n\n  // Handle search form submission\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (location) {\n      getWeatherData(location);\n      getWeatherForecast(location);\n    }\n  };\n\n  // Toggle between Fahrenheit and Celsius\n  const toggleTemperatureUnit = () => {\n    setIsFahrenheit(!isFahrenheit);\n  };\n\n  // Convert the temperature based on the selected unit (Fahrenheit or Celsius)\n  const getTemperature = (tempCelsius) => {\n    return isFahrenheit ? convertToFahrenheit(tempCelsius).toFixed(1) : tempCelsius.toFixed(1);\n  };\n\n  return (\n    <div className=\"weather-container\">\n      <h2 className=\"weather-title\">Weather</h2>\n\n      <form onSubmit={handleSearch} className=\"weather-search-form\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a city\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          className=\"weather-input\"\n        />\n        <button type=\"submit\" className=\"weather-search-btn\">\n          Search\n        </button>\n      </form>\n\n      {error && <p className=\"error-message\">{error}</p>}\n\n      {weatherData && (\n        <div className=\"weather-info\">\n          <h3>{weatherData.name}, {weatherData.sys.country}</h3>\n          <p>\n            Temperature: {getTemperature(weatherData.main.temp)}°\n            {isFahrenheit ? \"F\" : \"C\"}\n          </p>\n          <p>Conditions: {weatherData.weather[0].description}</p>\n          <p>Humidity: {weatherData.main.humidity}%</p>\n          <p>Wind Speed: {weatherData.wind.speed} m/s</p>\n        </div>\n      )}\n\n      {forecastData && (\n        <div className=\"weather-forecast\">\n          <h4>5-Day Forecast:</h4>\n          {forecastData.list.slice(0, 5).map((forecast, index) => (\n            <div key={index}>\n              <p>\n                {new Date(forecast.dt * 1000).toLocaleDateString()} - \n                {getTemperature(forecast.main.temp)}°\n                {isFahrenheit ? \"F\" : \"C\"}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Toggle button to switch between Celsius and Fahrenheit */}\n      <button onClick={toggleTemperatureUnit} className=\"unit-toggle-btn\">\n        {isFahrenheit ? \"Switch to Celsius\" : \"Switch to Fahrenheit\"}\n      </button>\n    </div>\n  );\n}\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,IAAIC,mBAAmB,EAAEC,oBAAoB,IAAIC,uBAAuB,QAAQ,qBAAqB,CAAC,CAAC;AAChI,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIa,QAAQ,EAAE;MACZM,cAAc,CAACN,QAAQ,CAAC;MACxBO,kBAAkB,CAACP,QAAQ,CAAC;IAC9B;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMM,cAAc,GAAG,MAAON,QAAQ,IAAK;IACzC,IAAI;MACF,MAAMQ,IAAI,GAAG,MAAMnB,mBAAmB,CAACW,QAAQ,CAAC;MAChDH,cAAc,CAACW,IAAI,CAAC;MACpBL,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZN,QAAQ,CAAC,8BAA8B,CAAC;MACxCN,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMU,kBAAkB,GAAG,MAAOP,QAAQ,IAAK;IAC7C,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMnB,uBAAuB,CAACS,QAAQ,CAAC;MACxDD,eAAe,CAACW,QAAQ,CAAC;IAC3B,CAAC,CAAC,OAAOD,GAAG,EAAE;MACZN,QAAQ,CAAC,+BAA+B,CAAC;MACzCJ,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMY,mBAAmB,GAAIC,OAAO,IAAK;IACvC,OAAQA,OAAO,GAAG,CAAC,GAAI,CAAC,GAAG,EAAE;EAC/B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACvC,OAAO,CAACA,UAAU,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIjB,QAAQ,EAAE;MACZM,cAAc,CAACN,QAAQ,CAAC;MACxBO,kBAAkB,CAACP,QAAQ,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAMkB,qBAAqB,GAAGA,CAAA,KAAM;IAClCb,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;;EAED;EACA,MAAMe,cAAc,GAAIC,WAAW,IAAK;IACtC,OAAOhB,YAAY,GAAGO,mBAAmB,CAACS,WAAW,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,GAAGD,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;EAC5F,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC9B,OAAA;MAAI6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1ClC,OAAA;MAAMmC,QAAQ,EAAEb,YAAa;MAACO,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAC3D9B,OAAA;QACEoC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAE/B,QAAS;QAChBgC,QAAQ,EAAGhB,CAAC,IAAKf,WAAW,CAACe,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC7CT,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFlC,OAAA;QAAQoC,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAENzB,KAAK,iBAAIT,OAAA;MAAG6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAErB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEjD/B,WAAW,iBACVH,OAAA;MAAK6B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B9B,OAAA;QAAA8B,QAAA,GAAK3B,WAAW,CAACsC,IAAI,EAAC,IAAE,EAACtC,WAAW,CAACuC,GAAG,CAACC,OAAO;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtDlC,OAAA;QAAA8B,QAAA,GAAG,eACY,EAACJ,cAAc,CAACvB,WAAW,CAACyC,IAAI,CAACC,IAAI,CAAC,EAAC,MACpD,EAAClC,YAAY,GAAG,GAAG,GAAG,GAAG;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACJlC,OAAA;QAAA8B,QAAA,GAAG,cAAY,EAAC3B,WAAW,CAAC2C,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDlC,OAAA;QAAA8B,QAAA,GAAG,YAAU,EAAC3B,WAAW,CAACyC,IAAI,CAACI,QAAQ,EAAC,GAAC;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7ClC,OAAA;QAAA8B,QAAA,GAAG,cAAY,EAAC3B,WAAW,CAAC8C,IAAI,CAACC,KAAK,EAAC,MAAI;MAAA;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACN,EAEA7B,YAAY,iBACXL,OAAA;MAAK6B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B9B,OAAA;QAAA8B,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvB7B,YAAY,CAAC8C,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACpC,QAAQ,EAAEqC,KAAK,kBACjDtD,OAAA;QAAA8B,QAAA,eACE9B,OAAA;UAAA8B,QAAA,GACG,IAAIyB,IAAI,CAACtC,QAAQ,CAACuC,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAC,IACnD,EAAC/B,cAAc,CAACT,QAAQ,CAAC2B,IAAI,CAACC,IAAI,CAAC,EAAC,MACpC,EAAClC,YAAY,GAAG,GAAG,GAAG,GAAG;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC,GALIoB,KAAK;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAGDlC,OAAA;MAAQ0D,OAAO,EAAEjC,qBAAsB;MAACI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAChEnB,YAAY,GAAG,mBAAmB,GAAG;IAAsB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChC,EAAA,CAxHQD,OAAO;AAAA0D,EAAA,GAAP1D,OAAO;AA0HhB,eAAeA,OAAO;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}