{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmexin/React Project website/To do list/src/components/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../Ca\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calculator() {\n  _s();\n  const [num1, setNum1] = useState(\"\"); // First number\n  const [num2, setNum2] = useState(\"\"); // Second number\n  const [result, setResult] = useState(null); // Result of calculation\n\n  const handleCalculate = operation => {\n    const number1 = parseFloat(num1); // Convert string to number\n    const number2 = parseFloat(num2);\n    if (isNaN(number1) || isNaN(number2)) {\n      setResult(\"Invalid input\"); // Handle non-numeric input\n      return;\n    }\n    let calcResult;\n    switch (operation) {\n      case \"add\":\n        calcResult = number1 + number2;\n        break;\n      case \"subtract\":\n        calcResult = number1 - number2;\n        break;\n      case \"multiply\":\n        calcResult = number1 * number2;\n        break;\n      case \"divide\":\n        calcResult = number2 !== 0 ? number1 / number2 : \"Cannot divide by zero\";\n        break;\n      default:\n        calcResult = \"Unknown operation\";\n    }\n    setResult(calcResult); // Update the result state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Simple Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter first number\",\n        value: num1,\n        onChange: e => setNum1(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter second number\",\n        value: num2,\n        onChange: e => setNum2(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCalculate(\"add\"),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCalculate(\"subtract\"),\n        children: \"Subtract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCalculate(\"multiply\"),\n        children: \"Multiply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCalculate(\"divide\"),\n        children: \"Divide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"wtDglkAIg/xm7S1j+sLLGOMUYeM=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calculator","_s","num1","setNum1","num2","setNum2","result","setResult","handleCalculate","operation","number1","parseFloat","number2","isNaN","calcResult","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ryanmexin/React Project website/To do list/src/components/Calculator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../Ca\"\n\nfunction Calculator() {\n  const [num1, setNum1] = useState(\"\"); // First number\n  const [num2, setNum2] = useState(\"\"); // Second number\n  const [result, setResult] = useState(null); // Result of calculation\n\n  const handleCalculate = (operation) => {\n    const number1 = parseFloat(num1); // Convert string to number\n    const number2 = parseFloat(num2);\n\n    if (isNaN(number1) || isNaN(number2)) {\n      setResult(\"Invalid input\"); // Handle non-numeric input\n      return;\n    }\n\n    let calcResult;\n    switch (operation) {\n      case \"add\":\n        calcResult = number1 + number2;\n        break;\n      case \"subtract\":\n        calcResult = number1 - number2;\n        break;\n      case \"multiply\":\n        calcResult = number1 * number2;\n        break;\n      case \"divide\":\n        calcResult = number2 !== 0 ? number1 / number2 : \"Cannot divide by zero\";\n        break;\n      default:\n        calcResult = \"Unknown operation\";\n    }\n    setResult(calcResult); // Update the result state\n  };\n\n  return (\n    <div>\n      <h2>Simple Calculator</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter first number\"\n          value={num1}\n          onChange={(e) => setNum1(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Enter second number\"\n          value={num2}\n          onChange={(e) => setNum2(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick={() => handleCalculate(\"add\")}>Add</button>\n        <button onClick={() => handleCalculate(\"subtract\")}>Subtract</button>\n        <button onClick={() => handleCalculate(\"multiply\")}>Multiply</button>\n        <button onClick={() => handleCalculate(\"divide\")}>Divide</button>\n      </div>\n      {result !== null && <h3>Result: {result}</h3>}\n    </div>\n  );\n}\n\nexport default Calculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}