{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmexin/React Project website/To do list/src/components/Nasa.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchNasaData } from \"../utils/NasaApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Nasa() {\n  _s();\n  //State to track user input (Planet) and fetched Nasa data\n  const [nasaPlanet, setNasaPlanet] = useState(\"\"); //for user input\n  const [nasaData, setNasaData] = useState(null); // For fetched Planet data\n  const [error, setError] = useState(null); // For error handling\n  const [loading, setLoading] = useState(false); // For loading state\n\n  // Handle form submission\n  const handleFetchData = async e => {\n    e.preventDefault(); // Prevent page reload\n    setError(null); // Clear any previous errors\n    setLoading(true); // Indicate data fetching\n\n    try {\n      const data = await fetchNasaData(nasaQuery); // Call the API function\n      setNasaData(data); // Update state with the fetched data\n    } catch (err) {\n      setError(\"Failed to fetch data. Please try again.\");\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nasa-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"NASA Data Explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFetchData,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nasaPlamet,\n        onChange: e => setNasaQuery(e.target.value),\n        placeholder: \"Enter a NASA query (e.g., planet, topic)\",\n        className: \"nasa-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"nasa-submit-btn\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), nasaData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nasa-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(nasaData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Nasa, \"I9JSNpFnipVQSCQLjQISNBXPZj0=\");\n_c = Nasa;\nexport default Nasa;\nvar _c;\n$RefreshReg$(_c, \"Nasa\");","map":{"version":3,"names":["React","useState","fetchNasaData","jsxDEV","_jsxDEV","Nasa","_s","nasaPlanet","setNasaPlanet","nasaData","setNasaData","error","setError","loading","setLoading","handleFetchData","e","preventDefault","data","nasaQuery","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","nasaPlamet","onChange","setNasaQuery","target","placeholder","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/ryanmexin/React Project website/To do list/src/components/Nasa.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport { fetchNasaData } from \"../utils/NasaApi\";\n\n\nfunction Nasa() {\n    //State to track user input (Planet) and fetched Nasa data\n    const [nasaPlanet, setNasaPlanet] = useState(\"\"); //for user input\n    const [nasaData, setNasaData] = useState(null); // For fetched Planet data\n    const [error, setError] = useState(null); // For error handling\n    const [loading, setLoading] = useState(false); // For loading state\n\n// Handle form submission\nconst handleFetchData = async (e) => {\n    e.preventDefault(); // Prevent page reload\n    setError(null); // Clear any previous errors\n    setLoading(true); // Indicate data fetching\n\n    try {\n      const data = await fetchNasaData(nasaQuery); // Call the API function\n      setNasaData(data); // Update state with the fetched data\n    } catch (err) {\n      setError(\"Failed to fetch data. Please try again.\");\n    } finally {\n      setLoading(false); // Stop loading state\n    }\n  };\n\n  return (\n    <div className=\"nasa-container\">\n      <h2>NASA Data Explorer</h2>\n      {/* Input Form */}\n      <form onSubmit={handleFetchData}>\n        <input\n          type=\"text\"\n          value={nasaPlamet}\n          onChange={(e) => setNasaQuery(e.target.value)}\n          placeholder=\"Enter a NASA query (e.g., planet, topic)\"\n          className=\"nasa-input\"\n        />\n        <button type=\"submit\" className=\"nasa-submit-btn\">\n          Search\n        </button>\n      </form>\n\n      {/* Loading State */}\n      {loading && <p>Loading...</p>}\n\n      {/* Error Message */}\n      {error && <p className=\"error-message\">{error}</p>}\n\n      {/* Fetched Data Display */}\n      {nasaData && (\n        <div className=\"nasa-data\">\n          <h3>Results:</h3>\n          <pre>{JSON.stringify(nasaData, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Nasa;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}