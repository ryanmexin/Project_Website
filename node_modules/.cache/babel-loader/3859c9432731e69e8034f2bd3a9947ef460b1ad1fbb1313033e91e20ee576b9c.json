{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmexin/React Project website/To do list/src/components/TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TodoList from \"./TodoList\"; // Import TodoList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const handleAddTask = () => {\n    if (task.trim()) {\n      setTasks([...tasks, task]);\n      setTimeout();\n      setTask(\"\"); // Clear the input field after adding\n    }\n  };\n  const handleClearTask = () => {\n    setTasks([]); // Clears all tasks\n  };\n  const handleDeleteTask = index => {\n    setTasks(tasks.filter((_, i) => i !== index)); // Deletes specific task\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-input\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        placeholder: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-submit-btn\",\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-submit-btn\",\n        onClick: handleClearTask,\n        children: \"Clear List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      tasks: tasks,\n      onDelete: handleDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"xgJRP4S5U+1h+stMRYbjgD6Sspw=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","TodoList","jsxDEV","_jsxDEV","TodoApp","_s","task","setTask","tasks","setTasks","handleAddTask","trim","setTimeout","handleClearTask","handleDeleteTask","index","filter","_","i","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDelete","_c","$RefreshReg$"],"sources":["/Users/ryanmexin/React Project website/To do list/src/components/TodoApp.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport TodoList from \"./TodoList\"; // Import TodoList component\n\nfunction TodoApp() {\n  const [task, setTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n\n  const handleAddTask = () => {\n    if (task.trim()) {\n      setTasks([...tasks, task]);\n      setTimeout(\n        \n      )\n      setTask(\"\"); // Clear the input field after adding\n    }\n  };\n\n  const handleClearTask = () => {\n    setTasks([]); // Clears all tasks\n  };\n\n  const handleDeleteTask = (index) => {\n    setTasks(tasks.filter((_, i) => i !== index)); // Deletes specific task\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <div className=\"todo-header\">\n        <input\n          type=\"text\"\n          className=\"todo-input\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n          placeholder=\"Add a new task\"\n        />\n        <button className=\"todo-submit-btn\" onClick={handleAddTask}>\n          Add Task\n        </button>\n        <button className=\"todo-submit-btn\" onClick={handleClearTask}>\n          Clear List\n        </button>\n      </div>\n\n      <TodoList tasks={tasks} onDelete={handleDeleteTask} />\n    </div>\n  );\n}\n\nexport default TodoApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,IAAI,CAACK,IAAI,CAAC,CAAC,EAAE;MACfF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEF,IAAI,CAAC,CAAC;MAC1BM,UAAU,CAEV,CAAC;MACDL,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf;EACF,CAAC;EAED,MAAMM,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,MAAMK,gBAAgB,GAAIC,KAAK,IAAK;IAClCN,QAAQ,CAACD,KAAK,CAACQ,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,oBACEZ,OAAA;IAAKgB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BjB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXF,SAAS,EAAC,YAAY;QACtBG,KAAK,EAAEhB,IAAK;QACZiB,QAAQ,EAAGC,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACzCI,WAAW,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACF3B,OAAA;QAAQgB,SAAS,EAAC,iBAAiB;QAACY,OAAO,EAAErB,aAAc;QAAAU,QAAA,EAAC;MAE5D;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT3B,OAAA;QAAQgB,SAAS,EAAC,iBAAiB;QAACY,OAAO,EAAElB,eAAgB;QAAAO,QAAA,EAAC;MAE9D;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN3B,OAAA,CAACF,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACwB,QAAQ,EAAElB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV;AAACzB,EAAA,CA3CQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA6ChB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}